{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,yBAqBjC,SAASI,EAAcC,EAAUC,GAa/B,OAZyB,IAAIC,SAAQ,SAACC,EAASC,G,OAC7CC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7BPT,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAIF,IAHA,IAAMC,EAAOC,OAAOpB,EAAKK,UAAUgB,OAC7Bf,EAASc,OAAOpB,EAAKM,OAAOe,OAC9BC,EAAQF,OAAOpB,EAAKI,WAAWiB,OAC1BE,EAAW,EAAGA,GAAYjB,EAAQiB,GAAU,EACnDhB,EAAcgB,EAAUD,GACzBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvEqB,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEnEa,GAASH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const step = Number(refs.delayStep.value);\n  const amount = Number(refs.amount.value);\n  let delay = Number(refs.firstDelay.value);\n  for (let position = 1; position <= amount; position+=1) {\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  const createNewPromise = new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay })\n      }\n    }, delay)\n  );\n  return createNewPromise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","step","Number","value","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e19ebfaa.js.map"}